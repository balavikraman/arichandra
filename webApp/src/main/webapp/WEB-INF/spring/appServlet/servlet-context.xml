<?xml version="1.0" encoding="UTF-8"?>
    <beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

        <!-- Define and location and mapping of static content -->

        <!-- <mvc:default-servlet-handler /> -->
        <!-- <mvc:annotation-driven/> -->
        <!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

        <!-- Enables the Spring MVC @Controller programming model -->
        <annotation-driven />
        <!-- <mvc:annotation-driven/> -->

        <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
        <resources location="/resources/"  mapping="/resources/**" />

        <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
        <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <beans:property name="prefix" value="/WEB-INF/" />
            <beans:property name="suffix" value=".jsp" />
            <!-- <beans:property name="suffix" value=".html" /> -->
        </beans:bean>
        
     
        <beans:bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<beans:property name="driverClassName" value="org.postgresql.Driver" />
			<beans:property name="url" value="jdbc:postgresql://localhost:5432/lazypyre" />
			<beans:property name="username" value="postgres" />
			<beans:property name="password" value="Root@1234" />
		</beans:bean>
         
 
           
<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></beans:bean>
	
        <beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <beans:property name="dataSource" ref="dataSource" />
            <beans:property name="annotatedClasses">
                <beans:list>
                    <!-- 
          			<beans:value>com.finance.payment.model.cusDues</beans:value> -->
                </beans:list>
            </beans:property>
            <beans:property name="hibernateProperties">
                <beans:props>
                    <beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect
                    </beans:prop>
                  <!--   <beans:prop key="hibernate.dialect">org.hibernate.dialect.Oracle9iDialect
                    </beans:prop> -->
                    <beans:prop key="hibernate.show_sql">true</beans:prop>
                </beans:props>
            </beans:property>
        </beans:bean>
        
        
              
        <beans:bean id="loginService" class="com.arichandra.login.service.loginServiceImpl">
            <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
        </beans:bean>
       
           
		<context:component-scan base-package="com.arichandra.login" /> 
		
		
        <tx:annotation-driven transaction-manager="transactionManager" />
        
        <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
            <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
        </beans:bean>
  
    </beans:beans>
